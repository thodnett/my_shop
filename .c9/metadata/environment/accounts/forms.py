{"filter":false,"title":"forms.py","tooltip":"/accounts/forms.py","undoManager":{"mark":31,"position":31,"stack":[[{"start":{"row":17,"column":12},"end":{"row":17,"column":13},"action":"insert","lines":["1"],"id":1}],[{"start":{"row":17,"column":32},"end":{"row":17,"column":33},"action":"insert","lines":["l"],"id":2},{"start":{"row":17,"column":33},"end":{"row":17,"column":34},"action":"insert","lines":["a"]},{"start":{"row":17,"column":34},"end":{"row":17,"column":35},"action":"insert","lines":["b"]},{"start":{"row":17,"column":35},"end":{"row":17,"column":36},"action":"insert","lines":["e"]},{"start":{"row":17,"column":36},"end":{"row":17,"column":37},"action":"insert","lines":["l"]},{"start":{"row":17,"column":37},"end":{"row":17,"column":38},"action":"insert","lines":["="]}],[{"start":{"row":17,"column":38},"end":{"row":17,"column":39},"action":"insert","lines":["\""],"id":3},{"start":{"row":17,"column":39},"end":{"row":17,"column":40},"action":"insert","lines":["p"]},{"start":{"row":17,"column":40},"end":{"row":17,"column":41},"action":"insert","lines":["a"]},{"start":{"row":17,"column":41},"end":{"row":17,"column":42},"action":"insert","lines":["s"]},{"start":{"row":17,"column":42},"end":{"row":17,"column":43},"action":"insert","lines":["s"]},{"start":{"row":17,"column":43},"end":{"row":17,"column":44},"action":"insert","lines":["w"]}],[{"start":{"row":17,"column":44},"end":{"row":17,"column":45},"action":"insert","lines":["o"],"id":4},{"start":{"row":17,"column":45},"end":{"row":17,"column":46},"action":"insert","lines":["r"]},{"start":{"row":17,"column":46},"end":{"row":17,"column":47},"action":"insert","lines":["d"]}],[{"start":{"row":17,"column":47},"end":{"row":17,"column":48},"action":"insert","lines":["\""],"id":5}],[{"start":{"row":17,"column":39},"end":{"row":17,"column":40},"action":"remove","lines":["p"],"id":6}],[{"start":{"row":17,"column":39},"end":{"row":17,"column":40},"action":"insert","lines":["P"],"id":7}],[{"start":{"row":17,"column":48},"end":{"row":17,"column":49},"action":"insert","lines":[" "],"id":8}],[{"start":{"row":17,"column":48},"end":{"row":17,"column":49},"action":"remove","lines":[" "],"id":9}],[{"start":{"row":17,"column":48},"end":{"row":17,"column":49},"action":"insert","lines":[","],"id":10}],[{"start":{"row":17,"column":49},"end":{"row":17,"column":50},"action":"insert","lines":[" "],"id":11}],[{"start":{"row":24,"column":64},"end":{"row":25,"column":0},"action":"insert","lines":["",""],"id":12},{"start":{"row":25,"column":0},"end":{"row":25,"column":8},"action":"insert","lines":["        "]},{"start":{"row":25,"column":8},"end":{"row":26,"column":0},"action":"insert","lines":["",""]},{"start":{"row":26,"column":0},"end":{"row":26,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":26,"column":4},"end":{"row":26,"column":8},"action":"remove","lines":["    "],"id":13},{"start":{"row":26,"column":0},"end":{"row":26,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":24,"column":64},"end":{"row":24,"column":65},"action":"insert","lines":["]"],"id":14}],[{"start":{"row":24,"column":64},"end":{"row":24,"column":65},"action":"remove","lines":["]"],"id":15}],[{"start":{"row":24,"column":64},"end":{"row":25,"column":0},"action":"insert","lines":["",""],"id":16},{"start":{"row":25,"column":0},"end":{"row":25,"column":8},"action":"insert","lines":["        "]},{"start":{"row":25,"column":8},"end":{"row":26,"column":0},"action":"insert","lines":["",""]},{"start":{"row":26,"column":0},"end":{"row":26,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":26,"column":4},"end":{"row":26,"column":8},"action":"remove","lines":["    "],"id":17}],[{"start":{"row":26,"column":4},"end":{"row":43,"column":24},"action":"insert","lines":[" def clean_email(self):","        email = self.cleaned_data.get('email')","        username = self.cleaned_data.get('username')","        if User.objects.filter(email=email).exclude(username=username):","            raise forms.ValidationError(u'Email address must be unique')","        return email","","    def clean_password2(self):","        password1 = self.cleaned_data.get('password1')","        password2 = self.cleaned_data.get('password2')","","        if not password1 or not password2:","            raise ValidationError(\"Please confirm your password\")","        ","        if password1 != password2:","            raise ValidationError(\"Passwords must match\")","        ","        return password2"],"id":18}],[{"start":{"row":26,"column":0},"end":{"row":26,"column":4},"action":"remove","lines":["    "],"id":19}],[{"start":{"row":26,"column":0},"end":{"row":45,"column":0},"action":"remove","lines":[" def clean_email(self):","        email = self.cleaned_data.get('email')","        username = self.cleaned_data.get('username')","        if User.objects.filter(email=email).exclude(username=username):","            raise forms.ValidationError(u'Email address must be unique')","        return email","","    def clean_password2(self):","        password1 = self.cleaned_data.get('password1')","        password2 = self.cleaned_data.get('password2')","","        if not password1 or not password2:","            raise ValidationError(\"Please confirm your password\")","        ","        if password1 != password2:","            raise ValidationError(\"Passwords must match\")","        ","        return password2","        ",""],"id":20},{"start":{"row":26,"column":0},"end":{"row":26,"column":1},"action":"insert","lines":["c"]}],[{"start":{"row":26,"column":0},"end":{"row":26,"column":1},"action":"remove","lines":["c"],"id":21},{"start":{"row":25,"column":8},"end":{"row":26,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":25,"column":8},"end":{"row":26,"column":0},"action":"insert","lines":["",""],"id":22},{"start":{"row":26,"column":0},"end":{"row":26,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":26,"column":4},"end":{"row":26,"column":8},"action":"remove","lines":["    "],"id":23},{"start":{"row":26,"column":0},"end":{"row":26,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":26,"column":0},"end":{"row":26,"column":4},"action":"insert","lines":["    "],"id":24}],[{"start":{"row":26,"column":4},"end":{"row":43,"column":24},"action":"insert","lines":[" def clean_email(self):","        email = self.cleaned_data.get('email')","        username = self.cleaned_data.get('username')","        if User.objects.filter(email=email).exclude(username=username):","            raise forms.ValidationError(u'Email address must be unique')","        return email","","    def clean_password2(self):","        password1 = self.cleaned_data.get('password1')","        password2 = self.cleaned_data.get('password2')","","        if not password1 or not password2:","            raise ValidationError(\"Please confirm your password\")","        ","        if password1 != password2:","            raise ValidationError(\"Passwords must match\")","        ","        return password2"],"id":25}],[{"start":{"row":26,"column":0},"end":{"row":26,"column":4},"action":"remove","lines":["    "],"id":26},{"start":{"row":25,"column":8},"end":{"row":26,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":25,"column":8},"end":{"row":26,"column":0},"action":"insert","lines":["",""],"id":27},{"start":{"row":26,"column":0},"end":{"row":26,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":26,"column":4},"end":{"row":26,"column":8},"action":"remove","lines":["    "],"id":28}],[{"start":{"row":26,"column":2},"end":{"row":43,"column":24},"action":"remove","lines":["   def clean_email(self):","        email = self.cleaned_data.get('email')","        username = self.cleaned_data.get('username')","        if User.objects.filter(email=email).exclude(username=username):","            raise forms.ValidationError(u'Email address must be unique')","        return email","","    def clean_password2(self):","        password1 = self.cleaned_data.get('password1')","        password2 = self.cleaned_data.get('password2')","","        if not password1 or not password2:","            raise ValidationError(\"Please confirm your password\")","        ","        if password1 != password2:","            raise ValidationError(\"Passwords must match\")","        ","        return password2"],"id":29},{"start":{"row":26,"column":1},"end":{"row":26,"column":2},"action":"remove","lines":[" "]},{"start":{"row":26,"column":0},"end":{"row":26,"column":1},"action":"remove","lines":[" "]}],[{"start":{"row":26,"column":0},"end":{"row":43,"column":24},"action":"insert","lines":[" def clean_email(self):","        email = self.cleaned_data.get('email')","        username = self.cleaned_data.get('username')","        if User.objects.filter(email=email).exclude(username=username):","            raise forms.ValidationError(u'Email address must be unique')","        return email","","    def clean_password2(self):","        password1 = self.cleaned_data.get('password1')","        password2 = self.cleaned_data.get('password2')","","        if not password1 or not password2:","            raise ValidationError(\"Please confirm your password\")","        ","        if password1 != password2:","            raise ValidationError(\"Passwords must match\")","        ","        return password2"],"id":30}],[{"start":{"row":0,"column":0},"end":{"row":43,"column":24},"action":"remove","lines":["from django import forms","from django.contrib.auth.models import User","from django.contrib.auth.forms import UserCreationForm","from django.core.exceptions import ValidationError","","","class UserLoginForm(forms.Form):","    \"\"\"Form to be used to log in user\"\"\"","    ","    username = forms.CharField()","    password = forms.CharField(widget=forms.PasswordInput)","    ","    ","","class UserRegistrationForm(UserCreationForm):","    \"\"\" Form used to register a new user \"\"\"","    ","    password1 = forms.CharField(label=\"Password\", widget=forms.PasswordInput)","    password2 = forms.CharField(","        label=\"Password Confirmation\",","        widget=forms.PasswordInput)","    ","    class Meta:","        model = User","        fields = ['email', 'username', 'password1', 'password2']","        "," def clean_email(self):","        email = self.cleaned_data.get('email')","        username = self.cleaned_data.get('username')","        if User.objects.filter(email=email).exclude(username=username):","            raise forms.ValidationError(u'Email address must be unique')","        return email","","    def clean_password2(self):","        password1 = self.cleaned_data.get('password1')","        password2 = self.cleaned_data.get('password2')","","        if not password1 or not password2:","            raise ValidationError(\"Please confirm your password\")","        ","        if password1 != password2:","            raise ValidationError(\"Passwords must match\")","        ","        return password2"],"id":31}],[{"start":{"row":0,"column":0},"end":{"row":44,"column":24},"action":"insert","lines":["from django import forms","from django.contrib.auth.models import User","from django.contrib.auth.forms import UserCreationForm","from django.core.exceptions import ValidationError","","","class UserLoginForm(forms.Form):","    \"\"\"Form to be used to log users in\"\"\"","","    username = forms.CharField()","    password = forms.CharField(widget=forms.PasswordInput)","","","class UserRegistrationForm(UserCreationForm):","    \"\"\"Form used to register a new user\"\"\"","","    password1 = forms.CharField(","        label=\"Password\",","        widget=forms.PasswordInput)","    password2 = forms.CharField(","        label=\"Password Confirmation\",","        widget=forms.PasswordInput)","    ","    class Meta:","        model = User","        fields = ['email', 'username', 'password1', 'password2']","    ","    def clean_email(self):","        email = self.cleaned_data.get('email')","        username = self.cleaned_data.get('username')","        if User.objects.filter(email=email).exclude(username=username):","            raise forms.ValidationError(u'Email address must be unique')","        return email","","    def clean_password2(self):","        password1 = self.cleaned_data.get('password1')","        password2 = self.cleaned_data.get('password2')","","        if not password1 or not password2:","            raise ValidationError(\"Please confirm your password\")","        ","        if password1 != password2:","            raise ValidationError(\"Passwords must match\")","        ","        return password2"],"id":32}]]},"ace":{"folds":[],"scrolltop":206.34375,"scrollleft":0,"selection":{"start":{"row":36,"column":54},"end":{"row":36,"column":54},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":17,"state":"start","mode":"ace/mode/python"}},"timestamp":1572987972584,"hash":"0bb1f3663bc2c6fae59fa6d7af5eb951a93d1944"}